#USER_ID=$(id -u) GROUP_ID=$(id -g) docker-compose up -d --build
version: '3.8'

services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    restart: unless-stopped
    command:
      #- --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - dataportainer:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer-http.entrypoints: web
      traefik.http.routers.portainer.rule: Host(`dashboard.localhost`)
      traefik.http.services.portainer-websecure.loadbalancer.server.port: 9000

  db:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: diesel
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - db:/var/lib/mysql

  diesel_cli:
    build: ./docker/diesel_cli/
    container_name: diesel_cli
    restart: unless-stopped
    user: "${USER_ID}:${GROUP_ID}"
    env_file:
      - .env-docker
    working_dir: /app/api
    volumes:
      - ./:/app
    depends_on:
      - db
    entrypoint: ../docker/diesel_cli/entrypoint.sh

  rust:
    image: rust:latest
    container_name: rust
    restart: unless-stopped
    user: "${USER_ID}:${GROUP_ID}"
    env_file:
      - .env-docker
    working_dir: /app
    volumes:
      - ./:/app
      - ./.env-docker:/.env:ro
    depends_on:
      - db
      - diesel_cli
    entrypoint: ./docker/rust/entrypoint.sh
    labels:
      traefik.enable: true
      traefik.http.routers.rust-http.entrypoints: web
      traefik.http.routers.rust.rule: Host(`api.localhost`)
      traefik.http.services.rust-websecure.loadbalancer.server.port: 5000
    expose:
      - 5000

volumes:
  db:
  dataportainer: